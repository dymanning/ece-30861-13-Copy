#!/usr/bin/env python3
import os
import sys
import subprocess
import re 

def main():
    if len(sys.argv) < 2:
        print("Usage: ./run [install|URL_FILE|test]")
        sys.exit(1)

    cmd = sys.argv[1]

    if cmd == "install":
        # Install deps in userland
        try:
            subprocess.check_call([sys.executable, "-m", "pip", "install", "--user", "-r", "requirements.txt"])
            sys.exit(0)
        except subprocess.CalledProcessError:
            sys.exit(1)

    elif cmd == "test":
        completed = subprocess.run(
            [sys.executable, "-m", "pytest",
            "tests",           # explicitly point to your test folder
            "--maxfail=1",
            "--disable-warnings",
            "--cov=src",
            "--cov-report=term"],
            capture_output=True, text=True
        )

        output = completed.stdout + completed.stderr

        # Collect total tests
        collected_match = re.search(r"collected (\d+) items", output)
        if not collected_match:
            collected_match = re.search(r"collected (\d+) test", output)
        total = int(collected_match.group(1)) if collected_match else 0

        # Collect passed tests
        passed_match = re.search(r"=+ (\d+) passed", output)
        passed = int(passed_match.group(1)) if passed_match else 0

        # Collect coverage
        coverage_match = re.search(r"TOTAL\s+\d+\s+\d+\s+(\d+)%", output)
        coverage = int(coverage_match.group(1)) if coverage_match else 0

        print(f"{passed}/{total} test cases passed. {coverage}% line coverage achieved.")

        # Exit according to spec
        if passed == total and total >= 20 and coverage >= 80:
            sys.exit(0)
        else:
            sys.exit(1)

    else:
        # assume it's a URL file
        from main import main as run_main
        run_main(cmd)

if __name__ == "__main__":
    main()
