ModelInfo(id='google/gemma-3-27b-it', author='google', sha='005ad3404e59d6023443cb575daa05336842228a', created_at=datetime.datetime(2025, 3, 1, 19, 10, 19, tzinfo=datetime.timezone.utc), last_modified=datetime.datetime(2025, 3, 21, 20, 29, 2, tzinfo=datetime.timezone.utc), private=False, disabled=False, downloads=894368, downloads_all_time=None, gated='manual', gguf=None, inference='warm', inference_provider_mapping=None, likes=1612, library_name='transformers', tags=['transformers', 'safetensors', 'gemma3', 'image-text-to-text', 'conversational', 'arxiv:1905.07830', 'arxiv:1905.10044', 'arxiv:1911.11641', 'arxiv:1904.09728', 'arxiv:1705.03551', 'arxiv:1911.01547', 'arxiv:1907.10641', 'arxiv:1903.00161', 'arxiv:2009.03300', 'arxiv:2304.06364', 'arxiv:2103.03874', 'arxiv:2110.14168', 'arxiv:2311.12022', 'arxiv:2108.07732', 'arxiv:2107.03374', 'arxiv:2210.03057', 'arxiv:2106.03193', 'arxiv:1910.11856', 'arxiv:2502.12404', 'arxiv:2502.21228', 'arxiv:2404.16816', 'arxiv:2104.12756', 'arxiv:2311.16502', 'arxiv:2203.10244', 'arxiv:2404.12390', 'arxiv:1810.12440', 'arxiv:1908.02660', 'arxiv:2312.11805', 'base_model:google/gemma-3-27b-pt', 'base_model:finetune:google/gemma-3-27b-pt', 'license:gemma', 'text-generation-inference', 'endpoints_compatible', 'region:us'], pipeline_tag='image-text-to-text', mask_token=None, card_data={'base_model': 'google/gemma-3-27b-pt', 'datasets': None, 'eval_results': None, 'language': None, 'library_name': 'transformers', 'license': 'gemma', 'license_name': None, 'license_link': None, 'metrics': None, 'model_name': None, 'pipeline_tag': 'image-text-to-text', 'tags': None, 'extra_gated_heading': 'Access Gemma on Hugging Face', 'extra_gated_prompt': 'To access Gemma on Hugging Face, you’re required to review and agree to Google’s usage license. To do this, please ensure you’re logged in to Hugging Face and click below. Requests are processed immediately.', 'extra_gated_button_content': 'Acknowledge license'}, widget_data=[{'text': 'Hi, what can you help me with?'}, {'text': 'What is 84 * 3 / 2?'}, {'text': 'Tell me an interesting fact about the universe!'}, {'text': 'Explain quantum computing in simple terms.'}], model_index=None, config={'architectures': ['Gemma3ForConditionalGeneration'], 'model_type': 'gemma3', 'processor_config': {'chat_template': '{{ bos_token }}\n{%- if messages[0][\'role\'] == \'system\' -%}\n    {%- if messages[0][\'content\'] is string -%}\n        {%- set first_user_prefix = messages[0][\'content\'] + \'\n\n\' -%}\n    {%- else -%}\n        {%- set first_user_prefix = messages[0][\'content\'][0][\'text\'] + \'\n\n\' -%}\n    {%- endif -%}\n    {%- set loop_messages = messages[1:] -%}\n{%- else -%}\n    {%- set first_user_prefix = "" -%}\n    {%- set loop_messages = messages -%}\n{%- endif -%}\n{%- for message in loop_messages -%}\n    {%- if (message[\'role\'] == \'user\') != (loop.index0 % 2 == 0) -%}\n        {{ raise_exception("Conversation roles must alternate user/assistant/user/assistant/...") }}\n    {%- endif -%}\n    {%- if (message[\'role\'] == \'assistant\') -%}\n        {%- set role = "model" -%}\n    {%- else -%}\n        {%- set role = message[\'role\'] -%}\n    {%- endif -%}\n    {{ \'<start_of_turn>\' + role + \'\n\' + (first_user_prefix if loop.first else "") }}\n    {%- if message[\'content\'] is string -%}\n        {{ message[\'content\'] | trim }}\n    {%- elif message[\'content\'] is iterable -%}\n        {%- for item in message[\'content\'] -%}\n            {%- if item[\'type\'] == \'image\' -%}\n                {{ \'<start_of_image>\' }}\n            {%- elif item[\'type\'] == \'text\' -%}\n                {{ item[\'text\'] | trim }}\n            {%- endif -%}\n        {%- endfor -%}\n    {%- else -%}\n        {{ raise_exception("Invalid content type") }}\n    {%- endif -%}\n    {{ \'<end_of_turn>\n\' }}\n{%- endfor -%}\n{%- if add_generation_prompt -%}\n    {{\'<start_of_turn>model\n\'}}\n{%- endif -%}\n'}, 'tokenizer_config': {'bos_token': '<bos>', 'chat_template': '{{ bos_token }}\n{%- if messages[0][\'role\'] == \'system\' -%}\n    {%- if messages[0][\'content\'] is string -%}\n        {%- set first_user_prefix = messages[0][\'content\'] + \'\n\n\' -%}\n    {%- else -%}\n        {%- set first_user_prefix = messages[0][\'content\'][0][\'text\'] + \'\n\n\' -%}\n    {%- endif -%}\n    {%- set loop_messages = messages[1:] -%}\n{%- else -%}\n    {%- set first_user_prefix = "" -%}\n    {%- set loop_messages = messages -%}\n{%- endif -%}\n{%- for message in loop_messages -%}\n    {%- if (message[\'role\'] == \'user\') != (loop.index0 % 2 == 0) -%}\n        {{ raise_exception("Conversation roles must alternate user/assistant/user/assistant/...") }}\n    {%- endif -%}\n    {%- if (message[\'role\'] == \'assistant\') -%}\n        {%- set role = "model" -%}\n    {%- else -%}\n        {%- set role = message[\'role\'] -%}\n    {%- endif -%}\n    {{ \'<start_of_turn>\' + role + \'\n\' + (first_user_prefix if loop.first else "") }}\n    {%- if message[\'content\'] is string -%}\n        {{ message[\'content\'] | trim }}\n    {%- elif message[\'content\'] is iterable -%}\n        {%- for item in message[\'content\'] -%}\n            {%- if item[\'type\'] == \'image\' -%}\n                {{ \'<start_of_image>\' }}\n            {%- elif item[\'type\'] == \'text\' -%}\n                {{ item[\'text\'] | trim }}\n            {%- endif -%}\n        {%- endfor -%}\n    {%- else -%}\n        {{ raise_exception("Invalid content type") }}\n    {%- endif -%}\n    {{ \'<end_of_turn>\n\' }}\n{%- endfor -%}\n{%- if add_generation_prompt -%}\n    {{\'<start_of_turn>model\n\'}}\n{%- endif -%}\n', 'eos_token': '<eos>', 'pad_token': '<pad>', 'unk_token': '<unk>', 'use_default_system_prompt': False}}, transformers_info=TransformersInfo(auto_model='AutoModelForImageTextToText', custom_class=None, pipeline_tag='image-text-to-text', processor='AutoProcessor'), trending_score=None, siblings=[RepoSibling(rfilename='.gitattributes', size=None, blob_id=None, lfs=None), RepoSibling(rfilename='README.md', size=None, blob_id=None, lfs=None), RepoSibling(rfilename='added_tokens.json', size=None, blob_id=None, lfs=None), RepoSibling(rfilename='chat_template.json', size=None, blob_id=None, lfs=None), RepoSibling(rfilename='config.json', size=None, blob_id=None, lfs=None), RepoSibling(rfilename='generation_config.json', size=None, blob_id=None, lfs=None), RepoSibling(rfilename='model-00001-of-00012.safetensors', size=None, blob_id=None, lfs=None), RepoSibling(rfilename='model-00002-of-00012.safetensors', size=None, blob_id=None, lfs=None), RepoSibling(rfilename='model-00003-of-00012.safetensors', size=None, blob_id=None, lfs=None), RepoSibling(rfilename='model-00004-of-00012.safetensors', size=None, blob_id=None, lfs=None), RepoSibling(rfilename='model-00005-of-00012.safetensors', size=None, blob_id=None, lfs=None), RepoSibling(rfilename='model-00006-of-00012.safetensors', size=None, blob_id=None, lfs=None), RepoSibling(rfilename='model-00007-of-00012.safetensors', size=None, blob_id=None, lfs=None), RepoSibling(rfilename='model-00008-of-00012.safetensors', size=None, blob_id=None, lfs=None), RepoSibling(rfilename='model-00009-of-00012.safetensors', size=None, blob_id=None, lfs=None), RepoSibling(rfilename='model-00010-of-00012.safetensors', size=None, blob_id=None, lfs=None), RepoSibling(rfilename='model-00011-of-00012.safetensors', size=None, blob_id=None, lfs=None), RepoSibling(rfilename='model-00012-of-00012.safetensors', size=None, blob_id=None, lfs=None), RepoSibling(rfilename='model.safetensors.index.json', size=None, blob_id=None, lfs=None), RepoSibling(rfilename='preprocessor_config.json', size=None, blob_id=None, lfs=None), RepoSibling(rfilename='processor_config.json', size=None, blob_id=None, lfs=None), RepoSibling(rfilename='special_tokens_map.json', size=None, blob_id=None, lfs=None), RepoSibling(rfilename='tokenizer.json', size=None, blob_id=None, lfs=None), RepoSibling(rfilename='tokenizer.model', size=None, blob_id=None, lfs=None), RepoSibling(rfilename='tokenizer_config.json', size=None, blob_id=None, lfs=None)], spaces=['eduagarcia/open_pt_llm_leaderboard', 'bishmoy/Arxiv-CS-RAG', 'umint/ai', 'hadadrjt/ai', 'umint/searchgpt', 'TIGER-Lab/MEGA-Bench', 'visionLMsftw/comparevlms', 'yourbench/advanced', 'MaziyarPanahi/FACTS-Leaderboard', 'bartar/tokenizers', 'newmindai/Mezura', 'fair-forward/evals-for-every-language', 'milwright/chatui-helper', 'bafifi4972/gemma3-27b', 'Tomoniai/gemma-3-chat', 'umint/gemma-3-270m', 'UD-Filipino/filbench-leaderboard', 'Agents-MCP-Hackathon/MultiAgent_System_for_Screenplay_Creation', 'Apewir/google-gemma-3-27b-it', 'ReallyFloppyPenguin/SynthGen', 'umint/openwebui', 'umint/image', 'giulio98/beyondrag', 'Slyracoon23/what_is_prompt_engineering', 'ItzRoBeerT/mini-tools', 'chatfinanz/google-gemma-3-27b-it', 'kalashshah040/SwitchAI', 'abidlabs/smol-arena', 'jayanthkumarrr/FateMate', 'Agents-MCP-Hackathon/novel-heroes', 'milwright/chat-adventure-games', 'vsierramatute/AmigAI-Test', 'uumerrr684/chatflow', 'mnadell/41134114Brainstormer', 'CUNYGradCenter/Espanol_Hunter', 'Dorjzodovsuren/DorjGPT_assistant', 'snowkylin/refsheet_chat', 'Rohit1412/AirGPT1.04b', 'mohitkumarrajbadi/Finetune_Gemma_Model', 'smedia1404/sat', 'Proximile/Multimodal-Remote-Chat', 'ThatsGroes/LLM-memory-calculator', 'chansung/novita-preview-playground', 'Chait333/Innomatics_Online_Mentor_Support', 'GetSoloTech/VLMVibeEval', 'Tonic/leaderboard_yourbench_Tonic_ESMA-Auto-Bench', 'Agents-MCP-Hackathon/cooler-card', 'FarhaanAli/multi-model-consensus', 'inwneon/project-voice-diarzation', 'ReallyFloppyPenguin/AICodepen', 'laurhur/psych101helper_v1', 'mcjhn/ai', 'SarowarSaurav/Finetuned-SLM', 'liucen56/adventure', 'Dorjzodovsuren/MongolianTTS', 'focustiki/care-count', 'umint/o4-mini', 'aaleya-5/Such.AI', 'lmingla/Precalculus-Functions-Applications', 'CUNYGradCenter/AmigAI-SPAN105', 'CUNYGradCenter/History_of_Europe_Industrialization_and_Labor', 'richardskimco/google-gemma', 'im93/Instant_Interview', 'atanugwc/chatbot', 'citrixhxc2/deepseek-ai-DeepSeek-R1c', 'muddokon/PokeAgent', 'Alpaula/Almdp', 'aiqtech/Gemma-3', 'miaoge2024/gemma3miaoge', 'WillO70/gemma3test', 'fffefgegegegegeg/ffffgff', 'CognitiveScience/gemma-3-chat', 'gsethi4/google-gemma-3-27b-it', 'fredeerock/google-gemma-3-27b-it', 'hrsprojects/google-gemma-3-27b-it', 'Dolphindore/google-gemma-3-27b-it', 'spriambada3/eHealth_Transcribe', 'ukhirani/gemma-trial', 'lun814/google-gemma-3-27b-it', 'ealeksa/gemma', 'Rjnikunj/google-gemma-3-27b-it', 'xkerser/OpenDeepResearch', 'teslatony/BugBuster.AI', 'Happy1099/google-gemma-gpt-2', 'typo777/google-gemma-3-27b-it', 'znacer/First_agent_template', 'abhirup780/medicine-details', 'abhirup780/hematology-report-generator', 'funny8girl/google-gemma-3-27b-it', 'donjerson29/google-gemma-3-27b-it', 'koura718/chainlit_250327', 'taarhiss/taarhissmodel', 'Zwounds/LibraryRAG', 'NanobotzAI/gemma-3-chat', 'NanobotzAI/gemma-3-chat-api', 'Pamudu13/gemma-3-chat-api', 'sultan-hassan/alfred_agent', 'Pamudu13/gemma-3-chat-api-2', 'NanobotzAI/gemma-3-chat-api-2', 'cartsycar4/gemma3-try3'], safetensors=SafeTensorsInfo(parameters={'BF16': 27432406640}, total=27432406640), security_repo_status=None, xet_enabled=None)